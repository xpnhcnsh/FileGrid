@using FileGrid.Entities
@using FileGrid.Services.Interface
<MudDialog>
    <TitleContent>@(Department.Id == 0 ? "添加部门" : "编辑部门")</TitleContent>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_valid">
            <MudTextField @bind-Value="Department.Name" Label="部门" Required="true" />
            <MudTextField @bind-Value="Department.Description" Label="描述" />
        </MudForm>
        @if(CompanyId == 1){
        <MudSwitch Immediate="true" T="bool" ValueChanged="@(newValue=>OnProjectGroupChanged(newValue))" Color="Color.Primary"
            Label="是否为项目组" />
        }
        
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" OnClick="Cancel">取消</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="Save" Disabled="!_valid">保存</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int CompanyId { get; set; }
    [Parameter]
    public Department Department { get; set; } = null!;
    [Inject]
    ISnackbar Snackbar { get; set; } = null!;
    [Inject]
    ICompanyService CompanyService { get; set; }

    private MudForm _form;
    private bool _valid = false;

    private bool _isProjectGroup;

    protected override void OnInitialized()
    {
        // 初始化本地变量
        _isProjectGroup = Department?.IsProjectGroup ?? false;

        // 确保 Department 对象不为空
        if (Department == null)
        {
            Department = new Department 
            { 
                Name = string.Empty, 
                CompanyId = CompanyId,
                IsProjectGroup = false 
            };
            _isProjectGroup = false;
        }

        // 如果是新建部门，确保 CompanyId 正确设置
        if (Department.Id == 0)
        {
            Department.CompanyId = CompanyId;
        }

        Console.WriteLine($"OnInitialized - Department.IsProjectGroup: {Department.IsProjectGroup}, _isProjectGroup: {_isProjectGroup}");
    }

    private async Task Save()
    {
        await _form.Validate();
        if (_valid)
        {
            Department.CompanyId = CompanyId;
            var result = (Department.Id == 0)
            ? await CompanyService.AddDepartmentAsync(Department)
            : await CompanyService.UpdateDepartmentAsync(Department);
            if (result == null)
            {
                Snackbar.Add("操作失败，部门名称可能重复", Severity.Error);
                return;
            }
            MudDialog.Close(DialogResult.Ok(result ?? Department));
        }
    }

    private void Cancel() => MudDialog.Cancel();

    private void OnProjectGroupChanged(bool newValue)
    {
        Department.IsProjectGroup = newValue;
    }
}
