@using FileGrid.Entities
@using FileGrid.Services.Interface
@using FileGrid.Utils.Enum
@using MudBlazor

@inject ICompanyService CompanyService

<MudDialog>
    <TitleContent>添加新公司</TitleContent>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="_formIsValid">
            <MudTextField @bind-Value="Company.Name" Label="公司名称" Required="true" Immediate="true"
                Error="@(!string.IsNullOrEmpty(_nameDuplicateError))" ErrorText="@_nameDuplicateError"
                Loading="@_isSubmitting" />
            <MudSelect Class="mt-2" T="CompanyType" @bind-Value="Company.Type" Label="类型" Required="true">
                @foreach (var t in Enum.GetValues<CompanyType>())
                {
                    <MudSelectItem Value="@t">@(t switch
                        {
                            CompanyType.CCTEG => "中煤",
                            CompanyType.Outsource => "外协",
                            CompanyType.PartA => "业主",
                            _ => t.ToString()
                        })</MudSelectItem>
                                }
            </MudSelect>
            <MudTextField @bind-Value="Company.Description" Label="描述" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" OnClick="Cancel">取消</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="Submit" Disabled="@(!_formIsValid)">保存
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public Company Company { get; set; } = null!;

    private string? _nameDuplicateError = string.Empty;
    private bool _isSubmitting = false;

    private MudForm _form = null!;
    private bool _formIsValid;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void Cancel() => MudDialog.Cancel();

    private async void Submit()
    {
        _nameDuplicateError = null;
        await _form.Validate();
        if (_form.IsValid)
        {
            _isSubmitting = true;
            bool exists = await CompanyService.ExistsByNameAsync(Company.Name);
            if (exists)
            {
                _nameDuplicateError = "该公司已存在";
                StateHasChanged();
                _isSubmitting = false;
                return;
            }
            MudDialog.Close(DialogResult.Ok(Company));
            _isSubmitting = false;
        }
    }
}
